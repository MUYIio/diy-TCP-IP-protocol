{
    // 使用 IntelliSense 了解相关属性。 
    // 悬停以查看现有属性的描述。
    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) 启动",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceRoot}/build/source/boot/boot.elf",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceRoot}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "miDebuggerPath": "x86_64-elf-gdb",
            "miDebuggerServerAddress": "127.0.0.1:1234",
            "targetArchitecture": "x86",
            "stopAtConnect": true,
            // 启动gdb之前，做些准备：写映像文件、启动qemu
            "windows": {
                "preLaunchTask": "调试准备", // 仅在windows下可自动运行
            },
            "linux": {
                "preLaunchTask": "调试准备", // 仅在windows下可自动运行
                "miDebuggerPath": "gdb", // linux下的特殊配置
            },
            "customLaunchSetupCommands": [],
            "setupCommands": [
                {
                    "description": "为 gdb 启用整齐打印",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "将反汇编风格设置为 Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                },
                // 设置体系结构: i8086，方便以16位方式进行反汇编
                // {
                //     "description": "设置体系结构",
                //     "text": "-gdb-set arch i8086",
                //     "ignoreFailures": true
                // }
            ],
            // gdb连接后的设置
            "postRemoteConnectCommands": [
                {
                    "description": "加载boot符号文件",
                    "text": "-file-symbol-file ./build/source/boot/boot.elf",
                    "ignoreFailures": false
                },
                {
                    "description": "加载内核符号文件",
                    "text": "add-symbol-file ./build/source/kernel/kernel.elf 0x10000",
                    "ignoreFailures": false
                },
                {
                    "description": "加载load符号文件",
                    "text": "add-symbol-file ./build/source/loader/loader.elf 0x8000",
                    "ignoreFailures": false
                },
                // {
                //     "description": "加载boot符号文件",
                //     "text": "add-symbol-file ./build/source/boot/boot.elf 0x7c00",
                //     "ignoreFailures": false
                // },
                {
                    "description": "加载init符号文件",
                    // 为了方便调试，不同应用的起始地址应当不同，这样才能正确单步调度和设置断点
                    "text": "add-symbol-file ./build/source/init/init.elf 0x82000000",
                    "ignoreFailures": false
                },
                {
                    "description": "加载shell符号文件",
                    // 为了方便调试，不同应用的起始地址应当不同，这样才能正确单步调度和设置断点
                    "text": "add-symbol-file ./build/source/shell/shell.elf 0x81000000",
                    "ignoreFailures": false
                },
                {
                    "description": "加载loop符号文件",
                    // 为了方便调试，不同应用的起始地址应当不同，这样才能正确单步调度和设置断点
                    "text": "add-symbol-file ./build/source/loop/loop.elf 0x83000000",
                    "ignoreFailures": false
                },
                {
                    "description": "加载snake符号文件",
                    // 为了方便调试，不同应用的起始地址应当不同，这样才能正确单步调度和设置断点
                    "text": "add-symbol-file ./build/source/snake/snake.elf 0x84000000",
                    "ignoreFailures": false
                },
                {
                    "description": "加载ping符号文件",
                    // 为了方便调试，不同应用的起始地址应当不同，这样才能正确单步调度和设置断点
                    "text": "add-symbol-file ./build/source/ping/ping.elf 0x85000000",
                    "ignoreFailures": false
                },                
                {
                    "description": "加载tftp符号文件",
                    // 为了方便调试，不同应用的起始地址应当不同，这样才能正确单步调度和设置断点
                    "text": "add-symbol-file ./build/source/tftp/tftp.elf 0x87000000",
                    "ignoreFailures": false
                },                         
                {
                    "description": "运行至0x7c00",
                    "text": "-exec-until *0x7c00",
                    "ignoreFailures": false
                },
            ],
        }
    ]
}